// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 5qEnKKbjrRfdMgFr6HPs6g
// Component: dsYI232RiT2r

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import Button from "../../Button"; // plasmic-import: ODmGuIPtpeqa/component
import { Reveal } from "@plasmicpkgs/react-awesome-reveal";
import ReleaseList from "../../ReleaseList"; // plasmic-import: FktXaRCRvA4m/component

import { useScreenVariants as useScreenVariantsg7FvRb78JZPu } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: g7FvRB78jZPu/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: 5qEnKKbjrRfdMgFr6HPs6g/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: dsYI232RiT2r/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: k5CAiIJ88jqx/icon
import Icon4Icon from "./icons/PlasmicIcon__Icon4"; // plasmic-import: 3c7WwEQPopEi/icon
import Icon5Icon from "./icons/PlasmicIcon__Icon5"; // plasmic-import: xPygoU0AmMVs/icon
import Icon13Icon from "./icons/PlasmicIcon__Icon13"; // plasmic-import: 4vL691BgbBzr/icon
import Icon14Icon from "./icons/PlasmicIcon__Icon14"; // plasmic-import: f6VCPqVspJrw/icon
import Icon15Icon from "./icons/PlasmicIcon__Icon15"; // plasmic-import: mGzvB8M9-odQ/icon

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: Flex__<"div">;
  releaseList?: Flex__<typeof ReleaseList>;
};

export interface DefaultHomepageProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "artist",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => [
          {
            id: "A001",
            name: "Matunzo Classic",
            genre: "Pop",
            bio: "Matunzo Classic is a dynamic pop artist known for his emotional lyrics and captivating performances. With a growing fan base, his music continues to touch hearts worldwide.",
            profileImage: "matunzo-classic-profile.jpg",
            socialMedia: {
              instagram: "https://instagram.com/matunzo_classic",
              twitter: "https://twitter.com/matunzo_classic",
              facebook: "https://facebook.com/matunzo_classic"
            }
          },
          {
            id: "A002",
            name: "Luna Beats",
            genre: "Electronic",
            bio: "Luna Beats is an electronic music producer known for her innovative soundscapes and pulsating rhythms. Her tracks are a fusion of futuristic beats and melodic elements.",
            profileImage: "luna-beats-profile.jpg",
            socialMedia: {
              instagram: "https://instagram.com/luna_beats",
              twitter: "https://twitter.com/luna_beats",
              facebook: "https://facebook.com/luna_beats"
            }
          },
          {
            id: "A003",
            name: "Echo Vibes",
            genre: "Jazz",
            bio: "Echo Vibes is a jazz musician celebrated for his smooth, soulful melodies and intricate improvisations. His music offers a fresh take on classic jazz standards.",
            profileImage: "echo-vibes-profile.jpg",
            socialMedia: {
              instagram: "https://instagram.com/echo_vibes",
              twitter: "https://twitter.com/echo_vibes",
              facebook: "https://facebook.com/echo_vibes"
            }
          }
        ]
      },
      {
        path: "release",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => [
          {
            id: "A001",
            name: "Matunzo Classic",
            genre: "Pop",
            bio: "Matunzo Classic is a dynamic pop artist known for his emotional lyrics and captivating performances. With a growing fan base, his music continues to touch hearts worldwide.",
            profileImage: "matunzo-classic-profile.jpg",
            socialMedia: {
              instagram: "https://instagram.com/matunzo_classic",
              twitter: "https://twitter.com/matunzo_classic",
              facebook: "https://facebook.com/matunzo_classic"
            }
          },
          {
            id: "A002",
            name: "Luna Beats",
            genre: "Electronic",
            bio: "Luna Beats is an electronic music producer known for her innovative soundscapes and pulsating rhythms. Her tracks are a fusion of futuristic beats and melodic elements.",
            profileImage: "luna-beats-profile.jpg",
            socialMedia: {
              instagram: "https://instagram.com/luna_beats",
              twitter: "https://twitter.com/luna_beats",
              facebook: "https://facebook.com/luna_beats"
            }
          },
          {
            id: "A003",
            name: "Echo Vibes",
            genre: "Jazz",
            bio: "Echo Vibes is a jazz musician celebrated for his smooth, soulful melodies and intricate improvisations. His music offers a fresh take on classic jazz standards.",
            profileImage: "echo-vibes-profile.jpg",
            socialMedia: {
              instagram: "https://instagram.com/echo_vibes",
              twitter: "https://twitter.com/echo_vibes",
              facebook: "https://facebook.com/echo_vibes"
            }
          }
        ]
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsg7FvRb78JZPu()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <Stack__
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__vy0Mt)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__eHu2Z)}>
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__hwoir)}
                displayHeight={"157px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"271px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/vercel_workflow/images/mbaStudio77A38ABpng.png",
                  fullWidth: 2160,
                  fullHeight: 2160,
                  aspectRatio: undefined
                }}
              />
            </div>
            <Button
              className={classNames("__wab_instance", sty.button__vRGyY)}
              submitsForm={false}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__zjEe9
                )}
              >
                {"Join us"}
              </div>
            </Button>
            <Button
              className={classNames("__wab_instance", sty.button___0Lh73)}
              color={"clear"}
              submitsForm={true}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ciaHb
                )}
              >
                {"Contact us"}
              </div>
            </Button>
          </Stack__>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__gap9)}
          >
            <h1
              className={classNames(
                projectcss.all,
                projectcss.h1,
                projectcss.__wab_text,
                sty.h1___0CfSf
              )}
            >
              {"M.B.A studio\nWhere Passion Meets Precision"}
            </h1>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__deAo9
              )}
            >
              {
                "Bringing your music to life with unparalleled expertise, dedication, and a passion for perfection, ensuring every note and nuance is captured to its fullest potential."
              }
            </div>
            <Button
              className={classNames("__wab_instance", sty.button___57UEa)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__lrrZm
                )}
              >
                {"Explore More"}
              </div>
            </Button>
          </Stack__>
          <div className={classNames(projectcss.all, sty.freeBox__uwr4R)}>
            <div className={classNames(projectcss.all, sty.freeBox__mE6Ns)}>
              <div className={classNames(projectcss.all, sty.freeBox___375M)}>
                <div
                  className={classNames(projectcss.all, sty.freeBox___2RhFc)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yx2Z
                    )}
                  >
                    {"1"}
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__vaszC)}
                />
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__aanT)}>
                <div className={classNames(projectcss.all, sty.freeBox__xNkKl)}>
                  <Reveal
                    className={classNames("__wab_instance", sty.reveal___0Sa)}
                    triggerOnce={true}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__qXlKk
                      )}
                    >
                      {"Stream Now"}
                    </h2>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nfCtG
                      )}
                    >
                      {
                        "Discover the sounds of MBA Studio on Spotify, YouTube, Apple Music, and more. Enjoy our expertly produced tracks anytime, anywhere. Start your music journey with us and feel the vibe. Stream our latest releases and timeless classics today!"
                      }
                    </div>
                  </Reveal>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__bCuG)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__w19N1)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__ra9AD, "rotate")}
                      displayHeight={"900px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"900px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/vercel_workflow/images/image.svg",
                        fullWidth: 150,
                        fullHeight: 150,
                        aspectRatio: 1
                      }}
                    />
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__jRodV)}>
                  <Reveal
                    className={classNames("__wab_instance", sty.reveal__bRq8D)}
                    triggerOnce={true}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__aZaxa)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__fWLe)}
                        displayHeight={"50px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/vercel_workflow/images/image2.png",
                          fullWidth: 602,
                          fullHeight: 273,
                          aspectRatio: undefined
                        }}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___1Y3Vg
                        )}
                      >
                        {"100K"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mvVZa
                        )}
                      >
                        {"Get Connected to 100K members Community."}
                      </div>
                    </div>
                  </Reveal>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__j7LW)}>
                  <Reveal
                    className={classNames("__wab_instance", sty.reveal__zCn96)}
                    triggerOnce={true}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__wuQzh)}
                    >
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__dkezr
                        )}
                      >
                        {"Join To Our Online Active Community."}
                      </h3>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__k9XMa
                        )}
                      >
                        {
                          "Connect with fellow music enthusiasts and stay updated on the latest from MBA Studio. Join our vibrant online community for exclusive content, behind-the-scenes looks, and engaging discussions. Be part of the conversation and immerse yourself in the music you love."
                        }
                      </div>
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__kk6ED
                        )}
                        color={"white"}
                        submitsForm={true}
                      >
                        {"Join Community"}
                      </Button>
                    </Stack__>
                  </Reveal>
                </div>
              </div>
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__zOlrq
              )}
            >
              <React.Fragment>
                <React.Fragment>{""}</React.Fragment>
                {
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3___4Rv1Z
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Our Music Artist"}
                      </span>
                    </React.Fragment>
                  </h3>
                }
                <React.Fragment>{""}</React.Fragment>
              </React.Fragment>
            </div>
            <div className={classNames(projectcss.all, sty.columns__tKWwu)}>
              {(_par => (!_par ? [] : Array.isArray(_par) ? _par : [_par]))(
                (() => {
                  try {
                    return $state.artist;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return [];
                    }
                    throw e;
                  }
                })()
              ).map((__plasmic_item_0, __plasmic_idx_0) => {
                const currentItem = __plasmic_item_0;
                const currentIndex = __plasmic_idx_0;
                return (
                  <div
                    className={classNames(projectcss.all, sty.column__eEjs)}
                    key={currentIndex}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__ksIP)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"400px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/vercel_workflow/images/uongoPrePnGpng.png",
                        fullWidth: 2000,
                        fullHeight: 1200,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(projectcss.all, sty.freeBox__p0F00)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__teO
                        )}
                      >
                        <React.Fragment>
                          {(() => {
                            try {
                              return currentItem.name;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return "";
                              }
                              throw e;
                            }
                          })()}
                        </React.Fragment>
                      </div>
                    </div>
                  </div>
                );
              })}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__tkUDl)}>
            <div className={classNames(projectcss.all, sty.freeBox__vhIsX)}>
              <div className={classNames(projectcss.all, sty.freeBox__hzTbm)}>
                <div className={classNames(projectcss.all, sty.freeBox__cmLN)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__g1Dq
                    )}
                  >
                    {"2"}
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__wYwbv)}
                />
              </div>
              <ReleaseList
                data-plasmic-name={"releaseList"}
                data-plasmic-override={overrides.releaseList}
                className={classNames("__wab_instance", sty.releaseList)}
              />
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__hr9Vk)}>
            <div className={classNames(projectcss.all, sty.freeBox__s2Gq)}>
              <div className={classNames(projectcss.all, sty.freeBox__bCftA)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__nEj3H
                  )}
                >
                  {"3"}
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__lVxfi)} />
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__cSgWs)}>
              <div className={classNames(projectcss.all, sty.freeBox__xETx)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__eEcr
                  )}
                >
                  {"Vision"}
                </h2>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__rYp4K
                  )}
                >
                  {
                    "At MBA Studio, our vision is to become a leading force in the global music industry, setting new standards of excellence. We\u2019re dedicated to crafting unforgettable music and pushing creative boundaries. Support us on this journey and be part of our quest to redefine the sound of tomorrow."
                  }
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__bpiBf)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__wkUWv)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"196px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/vercel_workflow/images/imageRemovebgPreview4Png.png",
                    fullWidth: 360,
                    fullHeight: 192,
                    aspectRatio: undefined
                  }}
                />

                <div className={classNames(projectcss.all, sty.freeBox__sInVn)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__xFmGj)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rG3Si
                      )}
                    >
                      {"1M"}
                    </div>
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___1C73X
                    )}
                  >
                    {"Support us by Subscribing to our youtube channel."}
                  </div>
                </div>
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__dLacU)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__hgvrW
                  )}
                >
                  {"1M+"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__jjeXf
                  )}
                >
                  {
                    "With your support we hope to achieve more than 1Million Subscribers."
                  }
                </div>
              </Stack__>
            </div>
          </div>
          <h1
            className={classNames(
              projectcss.all,
              projectcss.h1,
              projectcss.__wab_text,
              sty.h1___27Uec
            )}
          >
            {"M.B.A Musicians Program"}
          </h1>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__cLVc
            )}
          >
            {
              "Join the MBA Studio family and take your music to new heights. Collaborate with our expert team to create outstanding tracks and reach your artistic goals. Let\u2019s make incredible music together."
            }
          </div>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox___7OwnF)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__gRHmQ)}>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__dJg6I)}
              >
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3___4Qrby
                  )}
                >
                  {"Recording"}
                </h3>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ioIfB
                  )}
                >
                  {
                    "Experience pristine audio quality with our top-of-the-line recording equipment and acoustically treated rooms. Whether you're recording vocals, instruments, or full bands, we have the expertise to capture every detail."
                  }
                </div>
                <Button
                  className={classNames("__wab_instance", sty.button__in2Yj)}
                  color={"white"}
                  submitsForm={true}
                >
                  {"Learn More"}
                </Button>
              </Stack__>
              <Icon5Icon
                className={classNames(projectcss.all, sty.svg__i4MW6)}
                role={"img"}
              />
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__lx8Sm)}>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__lqMsN)}
              >
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3___8Q7TT
                  )}
                >
                  {"Mixing"}
                </h3>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ox6J8
                  )}
                >
                  {
                    "Our mixing services are designed to bring your tracks to life. We balance and refine each element to create a cohesive and dynamic sound that stands out."
                  }
                </div>
                <Button
                  className={classNames("__wab_instance", sty.button__cr7S8)}
                  color={"white"}
                  submitsForm={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jkSCx
                    )}
                  >
                    {"Learin More"}
                  </div>
                </Button>
              </Stack__>
              <Icon5Icon
                className={classNames(projectcss.all, sty.svg__xQgW3)}
                role={"img"}
              />
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__vauv3)}>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___3CF23)}
              >
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__maloR
                  )}
                >
                  {"Mastering"}
                </h3>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___86Jmd
                  )}
                >
                  {
                    "Give your music the final polish it needs with our mastering services. We ensure your tracks sound great on all platforms and devices, providing consistency and clarity."
                  }
                </div>
                <Button
                  className={classNames("__wab_instance", sty.button___8S2Jw)}
                  color={"white"}
                  submitsForm={true}
                >
                  {"Learn  More"}
                </Button>
              </Stack__>
              <Icon5Icon
                className={classNames(projectcss.all, sty.svg__pzxnR)}
                role={"img"}
              />
            </div>
            <div className={classNames(projectcss.all, sty.freeBox___4MtLr)}>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__nAWN)}
              >
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3___4LErh
                  )}
                >
                  {"Production"}
                </h3>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__jD2V
                  )}
                >
                  {
                    "From songwriting and arrangement to full-scale production, our team is here to help you create music that resonates. We offer creative input and technical expertise to bring your vision to fruition."
                  }
                </div>
                <Button
                  className={classNames("__wab_instance", sty.button___27EXj)}
                  color={"white"}
                  submitsForm={true}
                >
                  {"Learn More"}
                </Button>
              </Stack__>
              <Icon5Icon
                className={classNames(projectcss.all, sty.svg__k1Xse)}
                role={"img"}
              />
            </div>
          </Stack__>
          <PlasmicImg__
            alt={""}
            className={classNames(sty.img__ft7A3)}
            displayHeight={"auto"}
            displayMaxHeight={"none"}
            displayMaxWidth={"100%"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={"460px"}
            loading={"lazy"}
            src={{
              src: "/plasmic/vercel_workflow/images/mbaStudioF1225B9Png.png",
              fullWidth: 2160,
              fullHeight: 2160,
              aspectRatio: undefined
            }}
          />

          <h2
            className={classNames(
              projectcss.all,
              projectcss.h2,
              projectcss.__wab_text,
              sty.h2__yxXIr
            )}
          >
            {"Unlock a better workflow. \nPopup the vibe."}
          </h2>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__s5JAq)}
          >
            <Button
              className={classNames("__wab_instance", sty.button__pgErX)}
              color={"white"}
              submitsForm={true}
            >
              {"Join Community"}
            </Button>
            <Button
              className={classNames("__wab_instance", sty.button___3Y5Xl)}
              color={"clear"}
              submitsForm={true}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__hEoSu
                )}
              >
                {"Musician Program"}
              </div>
            </Button>
          </Stack__>
          <div className={classNames(projectcss.all, sty.freeBox__yOeoe)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__wA8H1)}
            >
              <div className={classNames(projectcss.all, sty.column__eMtwi)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__uwi2I)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__hxIyg)}
                    displayHeight={"40px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"40px"}
                    src={{
                      src: "/plasmic/vercel_workflow/images/image13.svg",
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />

                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__be5Yy)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__r3FCa
                      )}
                    >
                      {"Connect with us"}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__mk4YR)}
                    >
                      <Icon13Icon
                        className={classNames(projectcss.all, sty.svg__ejVlN)}
                        role={"img"}
                      />

                      <Icon14Icon
                        className={classNames(projectcss.all, sty.svg__ppAjz)}
                        role={"img"}
                      />

                      <Icon15Icon
                        className={classNames(projectcss.all, sty.svg__iSkbe)}
                        role={"img"}
                      />
                    </Stack__>
                  </Stack__>
                </Stack__>
              </div>
              <div className={classNames(projectcss.all, sty.column__oCiRz)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__z9Cq4)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___2U1V8
                    )}
                  >
                    {"Product"}
                  </div>
                  <Button
                    className={classNames("__wab_instance", sty.button__qkQax)}
                    color={"clear"}
                    endIcon={
                      <Icon4Icon
                        className={classNames(projectcss.all, sty.svg__xuldP)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__pFuq2)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qgC1Q
                      )}
                    >
                      {"Support"}
                    </div>
                  </Button>
                  <Button
                    className={classNames("__wab_instance", sty.button__seOdQ)}
                    color={"clear"}
                    endIcon={
                      <Icon4Icon
                        className={classNames(projectcss.all, sty.svg__knZsG)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__zOagG)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__cpo0V
                      )}
                    >
                      {"Log in"}
                    </div>
                  </Button>
                  <Button
                    className={classNames("__wab_instance", sty.button__aUds)}
                    color={"clear"}
                    endIcon={
                      <Icon4Icon
                        className={classNames(projectcss.all, sty.svg__e0WOm)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__uwMbH)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__okTl
                      )}
                    >
                      {"Patnership"}
                    </div>
                  </Button>
                  <Button
                    className={classNames("__wab_instance", sty.button__xIVd)}
                    color={"clear"}
                    endIcon={
                      <Icon4Icon
                        className={classNames(projectcss.all, sty.svg__xxi1A)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__bnbmw)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dCatk
                      )}
                    >
                      {"Insights"}
                    </div>
                  </Button>
                </Stack__>
              </div>
              <div className={classNames(projectcss.all, sty.column__rwbR2)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__xRaYk)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__tHmZf
                    )}
                  >
                    {"Support"}
                  </div>
                  <Button
                    className={classNames("__wab_instance", sty.button__g7APy)}
                    color={"clear"}
                    endIcon={
                      <Icon4Icon
                        className={classNames(projectcss.all, sty.svg__fEhsS)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__xZhjM)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___7RyTn
                      )}
                    >
                      {"Music"}
                    </div>
                  </Button>
                  <Button
                    className={classNames("__wab_instance", sty.button__wyCit)}
                    color={"clear"}
                    endIcon={
                      <Icon4Icon
                        className={classNames(projectcss.all, sty.svg__aXy6V)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg___97Xhl)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kUmz
                      )}
                    >
                      {"FAQs"}
                    </div>
                  </Button>
                  <Button
                    className={classNames("__wab_instance", sty.button___8DfNg)}
                    color={"clear"}
                    endIcon={
                      <Icon4Icon
                        className={classNames(projectcss.all, sty.svg__et0Cs)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__j3CIr)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__boVx1
                      )}
                    >
                      {"Status"}
                    </div>
                  </Button>
                </Stack__>
              </div>
              <div className={classNames(projectcss.all, sty.column__pTd6)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__gxyhJ)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nkQlf
                    )}
                  >
                    {"Company"}
                  </div>
                  <Button
                    className={classNames("__wab_instance", sty.button__zu6Zh)}
                    color={"clear"}
                    endIcon={
                      <Icon4Icon
                        className={classNames(projectcss.all, sty.svg___7QLvI)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__aGbNa)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hKrJ
                      )}
                    >
                      {"About"}
                    </div>
                  </Button>
                  <Button
                    className={classNames("__wab_instance", sty.button__njbNv)}
                    color={"clear"}
                    endIcon={
                      <Icon4Icon
                        className={classNames(projectcss.all, sty.svg__uQoG)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__iRdqL)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__cjfXn
                      )}
                    >
                      {"Contact us"}
                    </div>
                  </Button>
                  <Button
                    className={classNames("__wab_instance", sty.button__lt5Vb)}
                    color={"clear"}
                    endIcon={
                      <Icon4Icon
                        className={classNames(projectcss.all, sty.svg___1QntN)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__hpUec)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lsoM
                      )}
                    >
                      {"Careers"}
                    </div>
                  </Button>
                  <Button
                    className={classNames("__wab_instance", sty.button___4Rxze)}
                    color={"clear"}
                    endIcon={
                      <Icon4Icon
                        className={classNames(projectcss.all, sty.svg__yy17O)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__fguvQ)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__g9Gq8
                      )}
                    >
                      {"Media"}
                    </div>
                  </Button>
                </Stack__>
              </div>
            </Stack__>
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__n0JF5
            )}
          >
            {"\u00a9 Copyright MBA STUDIO 2024"}
          </div>
        </Stack__>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "releaseList"],
  releaseList: ["releaseList"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  releaseList: typeof ReleaseList;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    releaseList: makeNodeComponent("releaseList"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
